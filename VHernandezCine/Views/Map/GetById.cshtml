@model ML.Cine
@{
    ViewData["Title"] = "GetById";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html>
<body>
    <h2 style="text-align :center">Formulario Cine</h2>
    <hr />
    <div class="container-fluid">
        <div class="col-md-12">
            @using (Html.BeginForm("form", "Map", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col" style="display:none;">
                        @Html.LabelFor(model => model.IdCine, new { @class = "visually-hidden" })
                        @Html.TextBoxFor(model => model.IdCine, new { @class = "hidden form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                        @Html.ValidationMessageFor(model=>model.Nombre, null, new{@class="text-danger"})
                        @Html.Label(null, "",new{@class="lblNombre"})
                    </div>

                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Direccion)
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @id = "direccion"})
                        @Html.ValidationMessageFor(model=>model.Direccion)
                        @Html.Label(null, "",new{@class="lblApellidoPaterno"})
                    </div>

                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Ventas)
                        @Html.TextBoxFor(model => model.Ventas, new { @class = "form-control", @id = "txtApellidoMaterno"})
                        @Html.ValidationMessageFor(model=>model.Ventas)
                        @Html.Label(null, "",new{@class="lblApellidoMaterno"})
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Zona)
                        @Html.TextBoxFor(model => model.Zona.IdZona, new { @class = "form-control", @id = "txtApellidoMaterno"})
                       
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4"></div>
                    <div class="col-md-4"></div>
                    <div class="col-md-4">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Map", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" id="txtLat" class="form-control" placeholder="latitud">

                    </div>
                    <div class="col-md-4">
                        <input type="text" id="txtLng" class="form-control" placeholder="longitud">

                    </div>
                </div>
                <hr />
               
                <div class="row">
                    <div class="col-md-6" id="map_canvas" style="height:350px"></div>
                    <div class="col-md-6" id="chartContainer" style="height: 300px; width: 100%;"></div>
                </div>

            }

        </div>

    </div>
    <hr />
   
</body>
</html>
<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script src="https://cdn.canvasjs.com/jquery.canvasjs.min.js"></script>
<script>
    var vMarker
    var map
    map = new google.maps.Map(document.getElementById('map_canvas'), {
        zoom: 14,
        center: new google.maps.LatLng(19.4278907, -99.1666573),
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });
    vMarker = new google.maps.Marker({
        position: new google.maps.LatLng(19.4278907, -99.1666573),
        draggable: true
    });
    google.maps.event.addListener(vMarker, 'dragend', function (evt) {
        $("#txtLat").val(evt.latLng.lat().toFixed(6));
        $("#txtLng").val(evt.latLng.lng().toFixed(6));

        map.panTo(evt.latLng);
    });
    map.setCenter(vMarker.position);
    vMarker.setMap(map);

    $("#txtCiudad, #txtEstado, #txtDireccion").change(function () {
        movePin();
    });

    function movePin() {
        var geocoder = new google.maps.Geocoder();
        var textSelectM = $("#txtCiudad").text();
        var textSelectE = $("#txtEstado").val();
        var inputAddress = $("#txtDireccion").val() + ' ' + textSelectM + ' ' + textSelectE;
        geocoder.geocode({
            "address": inputAddress
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                vMarker.setPosition(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));
                map.panTo(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));

                $("#txtLat").val(results[0].geometry.location.lat());
                $("#txtLng").val(results[0].geometry.location.lng());
            }

        });
    }
</script>
<script>
    window.onload = function () {

        var options = {
            title: {
                text: "Desktop OS Market Share in 2017"
            },
            subtitles: [{
                text: "As of November, 2017"
            }],
            animationEnabled: true,
            data: [{
                type: "pie",
                startAngle: 40,
                toolTipContent: "<b>{label}</b>: {y}%",
                showInLegend: "true",
                legendText: "{label}",
                indexLabelFontSize: 16,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: 48.36, label: "Windows 7" },
                    { y: 26.85, label: "Windows 10" },
                    { y: 1.49, label: "Windows 8" },
                    { y: 6.98, label: "Windows XP" },
                    { y: 6.53, label: "Windows 8.1" },
                    { y: 2.45, label: "Linux" },
                    { y: 3.32, label: "Mac OS X 10.12" },
                    { y: 4.03, label: "Others" }
                ]
            }]
        };
        $("#chartContainer").CanvasJSChart(options);

    }
</script>

@*<div class="row">
    <div class="col">
    <input class="btn btn-success" type="button" value="Mapa" onclick="VerMapa()" />
    </div>
    <hr />
    <div id="map" style="width:100%; height:400px;"></div>
    </div>
    *@
@*<script type="text/javascript">
        function VerMapa() {
            var defectAdress = new google.maps.LatLng(19.4278907, -99.1666573);
            var mapOptions = {
                center: defectAdress,
                zoom: 20,

                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var mapa = new google.maps.Map(document.getElementById("map"), mapOptions);
            var marcador = new google.maps.Marker({
                position: myAddress,
                animation: google.maps.Animation.BOUNCE,
            });

            marcador.setMap(mapa);
        }
    </script>*@
</div>

