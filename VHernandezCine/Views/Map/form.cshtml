@model ML.Cine
@{
    ViewData["Title"] = "form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<body>
<h2 style="text-align :center">Formulario Cine</h2>
<hr />
    <div class="container-fluid">
        <div class="col-md-12">
            @using (Html.BeginForm("form", "Map", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col" style="display:none;">
                        @Html.LabelFor(model => model.IdCine, new { @class = "visually-hidden" })
                        @Html.TextBoxFor(model => model.IdCine, new { @class = "hidden form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre"})
                        @Html.ValidationMessageFor(model=>model.Nombre, null, new{@class="text-danger"})
                        @Html.Label(null, "",new{@class="lblNombre"})
                    </div>

                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Direccion)
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @id = "txtDireccion"})
                        @Html.ValidationMessageFor(model=>model.Direccion)
                       
                    </div>

                    <div class="col-md-4">

                        @Html.LabelFor(model => model.Ventas)
                        @Html.TextBoxFor(model => model.Ventas, new { @class = "form-control", @id = "txtVentas"})
                        @Html.ValidationMessageFor(model=>model.Ventas)
                        
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Zona.Zonas)
                        @Html.DropDownListFor(model => model.Zona.IdZona, new SelectList(Model.Zona.Zonas, "IdZona", "Nombre"), "Selecciona Una Opcion", new { @class = "form-control", @id = "ddlzona" })
                        
                    </div>
                </div>
              
                <div class="row">
                    <div class="col-md-4"></div>
                    <div class="col-md-4"></div>
                    <div class="col-md-4">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Map", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" id="txtLatitud" class="form-control; visually-hidden" placeholder="latitud" name="Latitud">

                    </div>
                    <div class="col-md-4">
                        <input type="text" id="txtLongitud" class="form-control; visually-hidden" placeholder="longitud" name="Longitud">

                    </div>
                   
                </div>
                <hr />
                <div id="map" style="height:300px; width:50%;"></div>

            }

        </div>
       
    </div>
    <hr />
   

    </body>
    </html>



<script type="text/javascript">
    function initMap() {
        if ($("#txtLatitud").val() == 0 && $("#txtLongitud").val() == 0) {
            myLatlng = { lat: 19.4278907, lng: -99.1666573 };
        } else {
            myLatlng = { lat: parseFloat($("#txtLatitud").val()), lng: parseFloat($("#txtLongitud").val()) };
        }
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 14,
            center: myLatlng,
        });
        // Create the initial InfoWindow.
        let infoWindow = new google.maps.InfoWindow({
            content: "Presiona la locación",
            position: myLatlng,
        });
        infoWindow.open(map);
        // Configure the click listener.
        //obtener direccion
        google.maps.event.addListener(map, 'click', function (event) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
                'latLng': event.latLng
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        $("#txtDireccion").val(results[0].formatted_address);
                    }
                }
            });
        });
        //obtener cordenadas
        map.addListener("click", (mapsMouseEvent) => {
            // Close the current InfoWindow.
            infoWindow.close();
            // Create a new InfoWindow.
            infoWindow = new google.maps.InfoWindow({
                position: mapsMouseEvent.latLng,
            });
            infoWindow.setContent(
                JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)
            );
            infoWindow.open(map);
            var Latitud = mapsMouseEvent.latLng.lat();
            var Longitud = mapsMouseEvent.latLng.lng();
            $("#txtLatitud").val(Latitud);
            $("#txtLongitud").val(Longitud);
        });
    }
    window.initMap = initMap;
    
</script>
@*<script>
    var vMarker
    var map
    map = new google.maps.Map(document.getElementById('map_canvas'), {
        zoom: 14,
        center: new google.maps.LatLng(19.4278907, -99.1666573),
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });
    vMarker = new google.maps.Marker({
        position: new google.maps.LatLng(19.4278907, -99.1666573),
        draggable: true
    });
    google.maps.event.addListener(vMarker, 'dragend', function (evt) {
        $("#txtLat").val(evt.latLng.lat().toFixed(6));
        $("#txtLng").val(evt.latLng.lng().toFixed(6));

        map.panTo(evt.latLng);
    });
    map.setCenter(vMarker.position);
    vMarker.setMap(map);

    $("#txtDireccion").change(function () {
        movePin();
    });

    function movePin() {
        var geocoder = new google.maps.Geocoder();
        var inputAddress = $("#txtDireccion").val();
        geocoder.geocode({
            "address": inputAddress
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                vMarker.setPosition(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));
                map.panTo(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));

                $("#txtLat").val(results[0].geometry.location.lat());
                $("#txtLng").val(results[0].geometry.location.lng());
            }

        });
    }
    google.maps.event.addListener(map, 'click', function (event) {
        var geocoderr = new google.maps.Geocoder();
        geocoderr.geocode({
            'latLng': event.latLng
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (results[0]) {
                    $("#txtDireccion").val(results[0].formatted_address);
                }
            }
        });
    });

</script>*@
   
</div>

