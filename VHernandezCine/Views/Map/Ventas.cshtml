@model ML.Cine
@{
    ViewData["Title"] = "Ventas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>Canvas test</title>
</head>
<body>
    <style>
        #map {
            height: 350px;
            width: 50%;
        }
    </style>
    <div class="row">
        <div class="col-md-6">
            <div id="chartContainer"></div>
        </div>
        <div class="col-md-6">
            <h1 class="text-center" style="text-shadow: 0 0 4px #4800ff;"> Puntos de venta</h1>
            <div id="map" style="width: 500px; height: 350px; border: 3px solid green; left: 100px;"></div>
        </div>
    </div>

    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw&callback=initMap&libraries=&v=weekly&sensor=false" defer></script>
    <script type="text/javascript">
        window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                title: {
                    text: "Total de Ventas "
                },
                subtitles: [{
                    text: "Periodo 2023"
                }],
                animationEnabled: true,
                data: [
                    {
                        type: "pie",
                        startAngle: 40,
                        toolTipContent: "<b>{label}</b>: {y}%",
                        showInLegend: "true",
                        legendText: "{label}",
                        indexLabelFontSize: 5,
                        indexLabel: "{label} - {y}%",
                        dataPoints: [
        @foreach (ML.Cine cine in Model.PromedioVentas)
        {
            <text>{ y: @cine.PromedioVentas, label: "@cine.IdZona" }, </text>
        }
                                ]
                    }
                ]
            });
            chart.render();
        }
        function initMap() {
            if ($("#txtLatitud").val() == 0 && $("#txtLongitud").val() == 0) {

                myLatlng = { lat: 19.59761, lng: -99.18054 };
            } else {

                myLatlng = { lat: 19.59761, lng: -99.18054 };
            }

            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 11,
                center: myLatlng,
            });
        @foreach (ML.Cine cine in Model.Cines)
        {
            <text>
                                var contentString = '<div id="content">' +
                    '<div id="siteNotice">' +
                    '</div>' +
                    'Direccion: ' + '@cine.Direccion' +
                    '<div id="bodyContent">' +
                    'Ventas:' + '@cine.Ventas' + "<br>" +
                    'Zona:' + '@cine.IdZona' + "<br>" +
                    'ID:' + '@cine.IdCine' + "<br>" +
                    '</div>' +
                    '</div>';


                var marker_@cine.IdCine = new google.maps.Marker({ position: { lat: @cine.Latitud, lng: @cine.Longitud }, map: map });

                (marker_@cine.IdCine).addlistener("click", function () {
                    (infowindow_@cine.IdCine).open(map, marker_@cine.IdCine);
            });
            var infowindow_@cine.IdCine = new google.maps.InfoWindow({
                content: contentString,
                ariaLabel: "Cines",
            });
            </text>
        }



        @*(infowindow_@model.id).open(map);*@
            // Configure the click listener.

        @*'marker'+'@Model.ID'.addListener("click", function () {
            infoWindow.open(map, marker);
            });*@

                            //map.addListener("click", (mapsMouseEvent) => {
                            //    // Close the current InfoWindow.
                            //    infoWindow.close();
                            //    // Create a new InfoWindow.
                            //    infoWindow = new google.maps.InfoWindow({
                            //        position: mapsMouseEvent.latLng,
                            //    });
                            //    infoWindow.setContent(
                            //        JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)
                            //    );

                            //    infoWindow.open(map);
                            //});
                        }


        window.initMap = initMap;
    </script>

</body>
</html>


